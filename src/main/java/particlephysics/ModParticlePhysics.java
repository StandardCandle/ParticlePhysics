package particlephysics;

import cpw.mods.fml.common.Mod;
import cpw.mods.fml.common.Mod.EventHandler;
import cpw.mods.fml.common.Mod.Instance;
import cpw.mods.fml.common.ModMetadata;
import cpw.mods.fml.common.SidedProxy;
import cpw.mods.fml.common.event.FMLInitializationEvent;
import cpw.mods.fml.common.event.FMLPreInitializationEvent;
import cpw.mods.fml.common.network.NetworkRegistry;
import java.util.Arrays;
import net.minecraftforge.common.config.Configuration;
import org.apache.logging.log4j.Logger;
import particlephysics.proxy.CommonProxy;
import particlephysics.utility.GUIHandler;

@Mod(modid = ModParticlePhysics.ID, name = ModParticlePhysics.NAME, version = ModParticlePhysics.VERSION_FULL, useMetadata = false, acceptedMinecraftVersions = "[1.7.10,)", dependencies = "required-after:Forge@[10.13.2.1291,)")
public class ModParticlePhysics
{
    /**
     * Internal mod name used for reference purposes and resource gathering. *
     */
    public static final String ID = "particlephysics";

    /**
     * Network name that is used in the NetworkMod. *
     */
    public static final String CHANNEL_NAME = ID;

    /**
     * Main version information that will be displayed in mod listing and for other purposes. *
     */
    public static final String V_MAJOR = "@MAJOR@";
    public static final String V_MINOR = "@MINOR@";
    public static final String V_BUILD = "@BUILD@";
    public static final String VERSION_FULL = V_MAJOR + "." + V_MINOR + "." + V_BUILD;

    /**
     * User friendly version of our mods name. *
     */
    public static final String NAME = "Particle Physics";

    /**
     * Reference to how many ticks make up a second in Minecraft. *
     */
    public static final int SECOND_IN_TICKS = 20;

    /**
     * Provides standard logging from the Forge. *
     */
    public static Logger LOGGER;

    /**
     * Creates blocks and items for Particle Physics. *
     */
    public static BetterLoader LOADER;

    /**
     * Public extra data about our mod that Forge uses in the mods listing page for more information. *
     */
    @Mod.Metadata(ModParticlePhysics.ID)
    public static ModMetadata metadata;

    public static ParticlePhysicsTab CREATIVE_TAB = new ParticlePhysicsTab();

    /**
     * Provides standardized configuration file offered by the Forge. *
     */
    private static Configuration CONFIG;

    // The instance of your mod that Forge uses.
    @Instance(value = CHANNEL_NAME)
    public static ModParticlePhysics INSTANCE;

    // Says where the client and server 'proxy' code is loaded.
    @SidedProxy(clientSide = "particlephysics.proxy.ClientProxy", serverSide = "particlephysics.proxy.CommonProxy")
    public static CommonProxy PROXY;

    @EventHandler
    public void preInit(FMLPreInitializationEvent event)
    {
        // Register instance.
        INSTANCE = this;

        // Setup logging.
        LOGGER = event.getModLog();

        // Load configuration.
        LOGGER.info("Loading configuration...");
        Settings.init(event.getSuggestedConfigurationFile());

        // Setup Mod Metadata for players to see in mod list with other mods.
        metadata.modId = ModParticlePhysics.ID;
        metadata.name = ModParticlePhysics.NAME;
        metadata.description = ModParticlePhysics.NAME + " a mod that lets you mess around and have fun to create a unique power plant.";
        metadata.url = "http://jakimfett.com/ParticlePhysics";
        metadata.logoFile = "assets/" + ModParticlePhysics.ID + "/logo.png";
        metadata.version = ModParticlePhysics.V_MAJOR + "." + ModParticlePhysics.V_MINOR;
        metadata.authorList = Arrays.asList("jakimfett");
        metadata.credits = "View the full contributor list on Github";
        metadata.autogenerated = false;

        LOGGER.info("Setting up Handlers...");
        PROXY.registerHandlers();

        LOGGER.info("Populating Particle List...");
        ParticleRegistry.populateParticleList();

        LOGGER.info("Creating Better Loader instance...");
        LOADER = new BetterLoader();
        LOADER.loadBlocks();
    }

    @EventHandler
    public void init(FMLInitializationEvent event)
    {
        LOGGER.info("Registering custom renderers...");
        PROXY.registerRenderers();

        LOGGER.info("Starting BetterLoader mainLoad()...");
        LOADER.mainload();

        LOGGER.info("Registering all Entities...");
        ParticleRegistry.registerEntities();

        LOGGER.info("Creating Custom GUI Handler...");
        NetworkRegistry.INSTANCE.registerGuiHandler(this, new GUIHandler());

    }
}
